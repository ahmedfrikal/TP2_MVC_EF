// <auto-generated />
using System;
using CreationdesModel.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreationdesModel.Migrations
{
    [DbContext(typeof(Mycontext))]
    [Migration("20230311222645_ModifrTabl33")]
    partial class ModifrTabl33
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreationdesModel.Models.Assurance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("agence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_fin")
                        .HasColumnType("datetime2");

                    b.Property<float>("prix")
                        .HasColumnType("real");

                    b.Property<int>("voitureID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("voitureID");

                    b.ToTable("assurances");
                });

            modelBuilder.Entity("CreationdesModel.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("CreationdesModel.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Retour")
                        .HasColumnType("bit");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_fin")
                        .HasColumnType("datetime2");

                    b.Property<int>("voitureId")
                        .HasColumnType("int");

                    b.Property<int>("voiture_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("clientId");

                    b.HasIndex("voitureId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("CreationdesModel.Models.Marque", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("marques");
                });

            modelBuilder.Entity("CreationdesModel.Models.Voiture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbrPlaces")
                        .HasColumnType("int");

                    b.Property<int>("NbrPortes")
                        .HasColumnType("int");

                    b.Property<string>("couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("marqueId")
                        .HasColumnType("int");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("marqueId");

                    b.ToTable("Voitures");
                });

            modelBuilder.Entity("CreationdesModel.Models.Assurance", b =>
                {
                    b.HasOne("CreationdesModel.Models.Voiture", "voiture")
                        .WithMany("Assurances")
                        .HasForeignKey("voitureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("voiture");
                });

            modelBuilder.Entity("CreationdesModel.Models.Location", b =>
                {
                    b.HasOne("CreationdesModel.Models.Client", "Client")
                        .WithMany("Locations")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CreationdesModel.Models.Voiture", "voiture")
                        .WithMany("Locations")
                        .HasForeignKey("voitureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("voiture");
                });

            modelBuilder.Entity("CreationdesModel.Models.Voiture", b =>
                {
                    b.HasOne("CreationdesModel.Models.Marque", "marque")
                        .WithMany("Voitures")
                        .HasForeignKey("marqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marque");
                });

            modelBuilder.Entity("CreationdesModel.Models.Client", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("CreationdesModel.Models.Marque", b =>
                {
                    b.Navigation("Voitures");
                });

            modelBuilder.Entity("CreationdesModel.Models.Voiture", b =>
                {
                    b.Navigation("Assurances");

                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
