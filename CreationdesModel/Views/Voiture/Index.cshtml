@model CreationdesModel.ModelView.PaginatedViewModel<Voiture>


<a asp-controller="Voiture" asp-action="Add" class="btn btn-outline-primary">Ajouter Voiture </a>
<table class="table">
    <thead>
        <tr>
            <th scope="col">photo</th>
            <th scope="col">Matricule</th>
            <th scope="col">Marque</th>
            <th scope="col">Assurances</th>
            <th scope="col">Locations</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        
        @foreach(Voiture v in Model.Items){
            
        <tr >
            <td><img src="~/images/@v.photo" > </td>
            <td>@v.Matricule</td>
            <td>@v.marque.Libelle</td>
             <td>
                <ul class="list-group">
             @foreach (Assurance assurance in v.Assurances)
             {  
                    <li class="list-group-item active d-flex justify-content-between align-items-center">
                       @assurance.agence
                                
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @assurance.date_debut
                                <p class="badge badge-primary badge-pill">      @assurance.date_debut</p>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                       @assurance.date_fin
                        <span class="badge badge-primary badge-pill">@assurance.date_fin </span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @assurance.prix DH
                        <span class="badge badge-primary badge-pill">@assurance.prix dh </span>
                    </li>
                   }
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                          Somme Total :  @v.prixAssurance DH
                        </li>
                 </ul>

            </td>

            <td>
            <ul class="list-group">
                
                @foreach (Location location in v.Locations)
                {
                <li  class="list-group-item d-flex justify-content-between align-items-center">
                    @location.date_debut
                    
                    
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @location.date_fin
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @location.prix_jour DH
                </li>
                 }
                 <li class="list-group-item d-flex justify-content-between align-items-center">
                   Prix Total des Location:  @v.prixLocation DH
                  </li>
                        
            </ul>
            </td>
            <td> 
                <a asp-action="update" asp-controller="Voiture" asp-route-id="@v.Id" class="btn btn-outline-success"> Modifier </a>
                <a asp-action="delete" asp-controller="Voiture" asp-route-id="@v.Id" class="btn btn-outline-danger"> Suprimer </a>
                    <a asp-action="Add" asp-controller="Assurance" asp-route-id="@v.Id" class="btn btn-outline-secondary"> Ajouter Assurance </a>
                    <a asp-action="Add" asp-controller="location" asp-route-id="@v.Id" class="btn btn-outline-info"> Ajouter Location </a>
                    <a asp-action="updateRetour" asp-controller="location" asp-route-id="@v.Id" class="btn btn-outline-warning"> Retour Locations </a>
            </td>
        </tr>
        }
    </tbody>
</table>

@if (Model.TotalItems > Model.PageSize)
{
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (Model.PageIndex > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1, pageSize = Model.PageSize })">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= Math.Ceiling((double)Model.TotalItems / Model.PageSize); i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item">
                        <a class="page-link" ><span>@i</span></a>
             
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                    </li>
                   
                }
            }

            @if (Model.PageIndex < Math.Ceiling((double)Model.TotalItems / Model.PageSize))
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1, pageSize = Model.PageSize })">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
      
            }
        </ul>
    </nav>
}